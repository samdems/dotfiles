(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){

var ko = require('knockout');
var components = require('ungit-components');
var navigation = require('ungit-navigation');
var programEvents = require('ungit-program-events');

components.register('header', function(args) {
  return new HeaderViewModel(args.app);
});

function HeaderViewModel(app) {
  var self = this;
  this.app = app;
  this.showBackButton = ko.observable(false);
  this.path = ko.observable();
  this.currentVersion = ungit.version;
  this.refreshButton = components.create('refreshbutton');
  this.showAddToRepoListButton = ko.computed(function() {
    return self.path() && self.app.repoList().indexOf(self.path()) == -1;
  });
}
HeaderViewModel.prototype.updateNode = function(parentElement) {
  ko.renderTemplate('header', this, {}, parentElement);
}
HeaderViewModel.prototype.submitPath = function() {
  navigation.browseTo('repository?path=' + encodeURIComponent(this.path()));
}
HeaderViewModel.prototype.onProgramEvent = function(event) {
  if (event.event == 'navigation-changed') {
    this.showBackButton(event.path != '');
    if (event.path == '') this.path('');
  } else if (event.event == 'navigated-to-path') {
    this.path(event.path);
  }
}
HeaderViewModel.prototype.addCurrentPathToRepoList = function() {
  programEvents.dispatch({ event: 'request-remember-repo', repoPath: this.path() });
  return true;
}

},{"knockout":"knockout","ungit-components":"ungit-components","ungit-navigation":"ungit-navigation","ungit-program-events":"ungit-program-events"}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJjb21wb25lbnRzL2hlYWRlci9oZWFkZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIlxudmFyIGtvID0gcmVxdWlyZSgna25vY2tvdXQnKTtcbnZhciBjb21wb25lbnRzID0gcmVxdWlyZSgndW5naXQtY29tcG9uZW50cycpO1xudmFyIG5hdmlnYXRpb24gPSByZXF1aXJlKCd1bmdpdC1uYXZpZ2F0aW9uJyk7XG52YXIgcHJvZ3JhbUV2ZW50cyA9IHJlcXVpcmUoJ3VuZ2l0LXByb2dyYW0tZXZlbnRzJyk7XG5cbmNvbXBvbmVudHMucmVnaXN0ZXIoJ2hlYWRlcicsIGZ1bmN0aW9uKGFyZ3MpIHtcbiAgcmV0dXJuIG5ldyBIZWFkZXJWaWV3TW9kZWwoYXJncy5hcHApO1xufSk7XG5cbmZ1bmN0aW9uIEhlYWRlclZpZXdNb2RlbChhcHApIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB0aGlzLmFwcCA9IGFwcDtcbiAgdGhpcy5zaG93QmFja0J1dHRvbiA9IGtvLm9ic2VydmFibGUoZmFsc2UpO1xuICB0aGlzLnBhdGggPSBrby5vYnNlcnZhYmxlKCk7XG4gIHRoaXMuY3VycmVudFZlcnNpb24gPSB1bmdpdC52ZXJzaW9uO1xuICB0aGlzLnJlZnJlc2hCdXR0b24gPSBjb21wb25lbnRzLmNyZWF0ZSgncmVmcmVzaGJ1dHRvbicpO1xuICB0aGlzLnNob3dBZGRUb1JlcG9MaXN0QnV0dG9uID0ga28uY29tcHV0ZWQoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHNlbGYucGF0aCgpICYmIHNlbGYuYXBwLnJlcG9MaXN0KCkuaW5kZXhPZihzZWxmLnBhdGgoKSkgPT0gLTE7XG4gIH0pO1xufVxuSGVhZGVyVmlld01vZGVsLnByb3RvdHlwZS51cGRhdGVOb2RlID0gZnVuY3Rpb24ocGFyZW50RWxlbWVudCkge1xuICBrby5yZW5kZXJUZW1wbGF0ZSgnaGVhZGVyJywgdGhpcywge30sIHBhcmVudEVsZW1lbnQpO1xufVxuSGVhZGVyVmlld01vZGVsLnByb3RvdHlwZS5zdWJtaXRQYXRoID0gZnVuY3Rpb24oKSB7XG4gIG5hdmlnYXRpb24uYnJvd3NlVG8oJ3JlcG9zaXRvcnk/cGF0aD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMucGF0aCgpKSk7XG59XG5IZWFkZXJWaWV3TW9kZWwucHJvdG90eXBlLm9uUHJvZ3JhbUV2ZW50ID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgaWYgKGV2ZW50LmV2ZW50ID09ICduYXZpZ2F0aW9uLWNoYW5nZWQnKSB7XG4gICAgdGhpcy5zaG93QmFja0J1dHRvbihldmVudC5wYXRoICE9ICcnKTtcbiAgICBpZiAoZXZlbnQucGF0aCA9PSAnJykgdGhpcy5wYXRoKCcnKTtcbiAgfSBlbHNlIGlmIChldmVudC5ldmVudCA9PSAnbmF2aWdhdGVkLXRvLXBhdGgnKSB7XG4gICAgdGhpcy5wYXRoKGV2ZW50LnBhdGgpO1xuICB9XG59XG5IZWFkZXJWaWV3TW9kZWwucHJvdG90eXBlLmFkZEN1cnJlbnRQYXRoVG9SZXBvTGlzdCA9IGZ1bmN0aW9uKCkge1xuICBwcm9ncmFtRXZlbnRzLmRpc3BhdGNoKHsgZXZlbnQ6ICdyZXF1ZXN0LXJlbWVtYmVyLXJlcG8nLCByZXBvUGF0aDogdGhpcy5wYXRoKCkgfSk7XG4gIHJldHVybiB0cnVlO1xufVxuIl19
